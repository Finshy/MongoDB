mongodb
特点：
1、功能：支持单文档事务，4.0后支持复制集的多文档事务，4.2后支持分片上的多文档事务，符合非关系型数据库原理，支持单文档写操作的ACID，灵活的文档模型，以json格式来组织数据，同时又强大的索引支持。
2、部署：没有依赖。可以直接解压，编译配置文件，初始化数据库，启动实例，部署简单清晰快速。
3、使用：mongodb可以使用命令行方式进行管理，也可以通过MongoDBCompass，studio3T,Robot3T,navicat等图形工具进行管理，管理工具都相当强大.
4、监控：可以在命令行中产看各中性能，状态视图；好用的图形监控工具有MongoDB opsManager，也是是官方的图形监控平台。
5、备份：支持冷备份和热备份，可以使用mongoexport和mongoimport导入导出，使用mongodump，和mongorestore进行物理备份和恢复。
6、高可用：mongodb提供复制集方案，故障自动切换，从节点完整复制主节点上的数据，自动同步主节点上的数据，主节点宕机自动选举一个从节点作为主节点来实现mongodb的高可用。
7、高扩展性：支持海量的数据存储和快速的水平扩展。
8、大文件存储：Gridfs支持大型数据如图片，视频文件等等。

适用场景：
地理位置索引构建的各种O2O应用。
游戏场景：存储游戏用户信息，用户的装备、积分等直接以内嵌文档的形式存储，方便查询、更新
物流场景：存储订单信息，订单状态在运送过程中会不断更新，以 MongoDB 内嵌数组的形式来存储，一次查询就能将订单所有的变更读取出来。
社交场景：存储存储用户信息，以及用户发表的朋友圈信息，通过地理位置索引实现附近的人、地点等功能
物联网场景：存储所有接入的智能设备信息，以及设备汇报的日志信息，并对这些信息进行多维度的分析
视频直播：存储用户信息、礼物信息等

同时MongoDB有好用的监控平台opsmanager。




redis
特点：
1、功能：事务半支持，复合非结构化数据原理。不支持acid，读写性能优异，适合当缓存，同时支持多种数据类型，使用key—value的形式组织数据。
2、部署：没有依赖 ，unix系统一般通过解压，make方式直接安装部署，也可以通过编辑配置文件部署，然后启动实例，部署快速。
3、使用：redis可以使用命令行方式进行管理，也可以通过Redis Desktop Manager,RedisPlus等等图形工具进行管理.
4、监控：可以在命令行中产看各中性能，状态视图；图形监控工具有treeNMS。
5、备份：支持冷备份和热备份，可以使用redis-dump和redis-load导入导出，使用SAVE和BGSAVE进行物理备份和恢复。
6、高可用：主从复制模式，自动故障转移，master故障，会随机选一个slave作为主节点，手动故障转移等等。
7、高扩展性：支持快速的水平扩展。

适用场景：
热点数据的缓存：由于redis访问速度块、支持的数据类型比较丰富，所以redis很适合用来存储热点数据
限时业务的运用：redis中可以使用expire命令设置一个键的生存时间，到时间后redis会删除它。利用这一特性可以运用在限时的优惠活动信息、手机验证码等业务场景。
计数器相关场景：redis由于incrby命令可以实现原子性的递增，所以可以运用于高并发的秒杀活动、分布式序列号的生成
排行榜相关场景：关系型数据库在排行榜方面查询速度普遍偏慢，所以可以借助redis的SortedSet进行热点数据的排序。
点赞、好友等相互关系的存储：利用set存储用户之间的点赞关联的，另外在点赞前判断是否点赞过就利用了sismember方法，当时这个接口的响应时间控制在10毫秒内，十分高效。
缺点：
不支持事务的回顾和强一致性
不适合大量数据的存储
数据访问频率过低不适合


